1.כדאי להשתמש בפרופרטיז משום שזה קוד יותר נכון, נקי ונוח לשימוש מאשר ליצור לכל סט וגט פונקציה נפרדת.
2.הפרופרטי מייצר בקינג פילד כשר אנחנו מייצר מייצרים פרופרטי דיפולטיבי ללא קוד נוסף. ככה הוא מייצר את את השדה הפרייבט מאחורי הקלעים.
3.ניתן לייצר פרופרטי ללא סטר אבל לא כדאי כי אח"כ לא נוכל לשנות את המידע שלו.
4.כן אפשר לשנות רמות נגישות בין הסטר לגטר
5.כן ניתן לייצר פרופרטי אבסטרקטי בתוך מחלקה אבסטרקטית ואז היורש יהיה חייב לממש גם אותו
6.אינטרפייס היא מחלקה אבסטרקטית שלא ניתן להגדיר בתוכה שדות אבל כן אפשר להגדיר בתוכה פונקציות ופרופרטיז ככה שמי שיממש את האינטרפייס יהיה חייב לממש את התוכן החובות שבו
7.אינטרפייס מרקר הוא אינטרפייס שאני מייצר בשביל לסמן מחלקות מסוימות לפי הצורך שלי
8. I
9.כל פונקציה שמוגדרת בוך אינטרפייס היא אוטומטית Public Abstract
10.כן ניתן לממש פונקציות בתוך אינטרפייס
11.ההבדל בין אינטרפייס למחלקה אבסטרקית הוא שקודם כל ניתן לרשת מכמה אינטרפייסים בו זמנית להגדיל ממחלקה אבסטרקית שניתן לרשת רק מאחת.
הבדל נוסף הוא שבמחלקה אבסטרקית ניתן להגדיר שדות.
למחלקה אבסאטרקטית ניתן להגדיר קונסטרקטור.
12. כן ניתן לייצר פרופרטי בתוך אינטרפייס
13.לא אי אפשר
14.כן אינטרפייסים יכול לרשת מאינטרפייס , המשמעות של זה היא שהוא אוסף עוד חובות שמי שיממש אותו יהיה חייב לממש גם את החובות של האבא
15.מסמנים עיגול בתוך עיגול עם קו ואת השם של האינטרפייס שיורשים ממנו
16.לא אינטרפייס אין בנאי משום שאי אפשר לייצר מופע של אינטרפייס
17.המילה IS
היא מילה שאלה שבודקת האם אובייקט מסוים שאנחנו שולחים או מסוג כלשהו.
18.המילה AS
משנה את הצורה שבה הקוד שלנו יסתכל ויקבל גישה לאובייקט מסוים.
19.כאשר AS 
נכשל התוכנית שלנו תקרוס
20.המילה NULL
זה ריק. אם ננסה לעשות משהו עם אובייקט שהוא NULL
התוכנית תקרוס
21.NULL
22.גט טייפ מחזירה לנו את הסוג של האובייקט שנשלח לה.
היא קיימת במחלקה אובג'ט ולכן היא תהיה קיימת בכל אובייקט בדוט נט.
